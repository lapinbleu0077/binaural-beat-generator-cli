searchState.loadedDescShard("inquire", 0, "<code>inquire</code> is a library for building interactive prompts on …\nTop-level type to describe the directives a prompt …\nCancels the prompt execution with a graceful shutdown.\nDeselects all options.\nConfiguration type for the prompt.\nPrompt to ask the user for simple yes/no questions, …\nSet of actions for a ConfirmPrompt.\nGeneric prompt suitable for when you need to parse the …\nSet of actions for a CustomTypePrompt.\nDefault formatter for default values, mapping true to [“…\nDefault password display mode.\nDefault value for the enable confirmation variable.\nDefault value for the allow display toggle variable.\nDefault error message displayed when parsing fails.\nDefault filter input enabled behaviour. Defaults to true.\nDefault filter input enabled behaviour. Defaults to true.\nDefault formatter, set to DEFAULT_BOOL_FORMATTER\nString formatter used by default in MultiSelect prompts. …\nDefault formatter, set to always display <code>&quot;********&quot;</code> …\nString formatter used by default in Select prompts. Simply …\nDefault formatter, set to DEFAULT_STRING_FORMATTER\nDefault help message.\nDefault help message.\nDefault help message.\nDefault help message.\nDefault behavior of keeping or cleaning the current filter …\nDefault page size, equal to the global default page size […\nDefault page size.\nDefault page size, equal to the global default page size […\nDefault input parser.\nDefault cursor behaviour on filter input change. Defaults …\nDefault cursor behaviour on filter input change. Defaults …\nDefault scoring function, which will create a score for …\nDefault scoring function, which will create a score for …\nDefault starting cursor index.\nDefault starting cursor index.\nDefault validators added to the CustomType prompt, none.\nDefault validators added to the Password prompt, none.\nDefault validators added to the Text prompt, none.\nDefault value of vim mode, equal to the global default …\nDefault value of vim mode.\nDeletes a substring of the input according to the …\nAction on the value text input handler.\nAction on the value text input handler.\nPassword text input is fully rendered as a normal input, …\nPassword text input is not rendered at all, no indication …\nSpecialized actions according to the prompt type.\nInnerActions are specialized prompt actions.\nSet of actions for a text input handler.\nInterrupts the prompt execution without a graceful …\nCharacters of the password text input are rendered marked …\nMoves the cursor according to the magnitude and the …\nMoves the cursor to the option below.\nMoves the cursor to the option below.\nMoves the cursor to the end of the list.\nMoves the cursor to the end of the list.\nMoves the cursor to the start of the list.\nMoves the cursor to the start of the list.\nWhen a suggestion list exists, moves the cursor to the …\nWhen a suggestion list exists, moves the cursor to the …\nWhen a suggestion list exists, moves the cursor to the …\nWhen a suggestion list exists, moves the cursor to the …\nMoves the cursor to the option above.\nMoves the cursor to the option above.\nPrompt suitable for when you need the user to select many …\nSet of actions for a MultiSelectPrompt.\nMoves the cursor to the page below.\nMoves the cursor to the page below.\nMoves the cursor to the page above.\nMoves the cursor to the page above.\nPrompt meant for secretive text inputs.\nDisplay modes of the text input of a password prompt.\nSet of actions for a PasswordPrompt.\nPrompt suitable for when you need the user to select one …\nSelects all options.\nSet of actions for a SelectPrompt.\nSubmits the current prompt answer, finishing the prompt if …\nStandard text prompt that returns the user string input.\nSet of actions for a TextPrompt.\nToggles the selection of the current option.\nToggles the display mode between plain text and the …\nWhen a suggestion list exists, autocompletes the text …\nAction on the value text input handler.\nAction on the value text input handler.\nAction on the value text input handler.\nAction on the value text input handler.\nWrites a character to the content, according to the …\nAutocompleter responsible for handling suggestions and …\nTrait and structs used by prompts to provide …\nError to be presented to the user when password …\nMessage to be presented to the user when confirming the …\nDefault value, returned when the user input is empty.\nDefault value, returned when the user input is empty.\nDefault indexes of options to be selected from the start.\nDefault value, returned when the user input is empty.\nFunction that formats the default value to be presented to …\nFunction that formats the provided value. Useful for …\nHow the password input is displayed to the user.\nWhether to ask for input twice to see if the provided …\nWhether to allow the user to toggle the display of the …\nDefinitions of <code>inquire</code>’s error handling\nError message displayed when a value could not be parsed …\nError message displayed when value could not be parsed …\nWhether to allow the option list to be filtered by user …\nWhether to allow the option list to be filtered by user …\nType aliases and default implementations for functions …\nFunction that formats the user input and presents it to …\nFunction that formats the user input and presents it to …\nFunction that formats the user input and presents it to …\nFunction that formats the user input and presents it to …\nFunction that formats the user input and presents it to …\nFunction that formats the user input and presents it to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDerives a prompt action from a Key event and the prompt …\nDerives a prompt action from a Key event.\nHelp message to be presented to the user.\nHelp message to be presented to the user.\nHelp message to be presented to the user.\nHelp message to be presented to the user.\nHelp message to be presented to the user.\nHelp message to be presented to the user.\nInitial value of the prompt’s text input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the current filter typed by the user is kept or …\nShorthand for the built-in <code>ExactLengthValidator</code> that …\nUtilities used to wrap user selections in Select and …\nShorthand for the built-in <code>MaxLengthValidator</code> that checks …\nMessage to be presented to the user.\nMessage to be presented to the user.\nMessage to be presented to the user.\nMessage to be presented to the user.\nMessage to be presented to the user.\nMessage to be presented to the user.\nShorthand for the built-in <code>MinLengthValidator</code> that checks …\nCreates a Confirm with the provided message and default …\nCreates a CustomType with the provided message and default …\nCreates a MultiSelect with the provided message and …\nCreates a Password with the provided message and default …\nCreates a Select with the provided message and options, …\nCreates a Text with the provided message and default …\nOptions displayed to the user.\nOptions displayed to the user.\nPage size of the options displayed to the user.\nPage size of the options displayed to the user.\nPage size of the suggestions displayed to the user, when …\nBuilt-in parser creator that checks whether the answer is …\nType aliases and default implementations for parsers …\nFunction that parses the user input and returns the result …\nFunction that parses the user input and returns the result …\nShort hint that describes the expected value of the input.\nShort hint that describes the expected value of the input.\nShort hint that describes the expected value of the input.\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nThis function is a helpful one-liner to prompt the user …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nParses the provided behavioral and rendering options and …\nRenderConfig to apply to the rendered interface.\nRenderConfig to apply to the rendered interface.\nRenderConfig to apply to the rendered interface.\nRenderConfig to apply to the rendered interface.\nRenderConfig to apply to the rendered interface.\nRenderConfig to apply to the rendered interface.\nShorthand for the built-in <code>ValueRequiredValidator</code> that …\nReset cursor position to first option on filter input …\nReset cursor position to first option on filter input …\nFunction called with the current user input to score the …\nFunction called with the current user input to score the …\nAcquires a write lock to the global RenderConfig object …\nStarting cursor index of the selection.\nStarting cursor index of the selection.\nStarting filter input\nStarting filter input\nInitial value of the prompt’s text input.\nInitial value of the prompt’s text input.\nGeneral type aliases.\nUI-related definitions for rendered content.\nTraits and structs used by prompts to validate user input …\nValidator to apply to the user input.\nCollection of validators to apply to the user input.\nCollection of validators to apply to the user input.\nCollection of validators to apply to the user input.\nWhether vim mode is enabled. When enabled, the user can …\nWhether vim mode is enabled. When enabled, the user can …\nSets all options to be selected by default. This overrides …\nSets a new autocompleter\nSets the prompt error message when password confirmation …\nSets the prompt message when asking for the password …\nSets the default input.\nSets the default input.\nSets the indexes to be selected by default.\nSets the default input.\nSets the default value formatter\nSets the formatter for default values.\nSets the standard display mode for the prompt.\nSets the flag to enable display toggling.\nSets a custom error message displayed when a submission …\nSets a custom error message displayed when a submission …\nSets the formatter.\nSets the formatter\nSets the formatter.\nSets the formatter.\nSets the formatter.\nSets the formatter.\nSets the help message of the prompt.\nSets the help message of the prompt.\nSets the help message of the prompt.\nSets the help message of the prompt.\nSets the help message of the prompt.\nSets the help message of the prompt.\nSets the initial value of the prompt’s text input.\nSets the keep filter behavior.\nSets the page size.\nSets the page size.\nSets the page size\nSets the parser.\nSets the parser.\nSets the placeholder.\nSets the placeholder.\nSets the placeholder.\nSets the provided color theme to this prompt.\nSets the provided color theme to this prompt.\nSets the provided color theme to this prompt.\nSets the provided color theme to this prompt.\nSets the provided color theme to this prompt.\nSets the provided color theme to this prompt.\nSets the reset_cursor behaviour. Defaults to true.\nSets the reset_cursor behaviour. Defaults to true.\nSets the scoring function.\nSets the scoring function.\nSets the starting cursor index.\nSets the starting cursor index.\nSets the starting filter input\nSets the starting filter input\nSets the initial value of the prompt’s text input.\nSets the initial value of the prompt’s text input.\nAdds a validator to the collection of validators. You …\nSets the validator to apply to the user input. You might …\nAdds a validator to the collection of validators. You …\nAdds a validator to the collection of validators. You …\nAdds the validators to the collection of validators in the …\nAdds the validators to the collection of validators in the …\nAdds the validators to the collection of validators in the …\nEnables or disables vim_mode.\nEnables or disables vim_mode.\nDisables the confirmation step of the prompt.\nDisables the filter input, which means the user will not …\nDisables the filter input, which means the user will not …\nRemoves the set help message.\nRemoves the set help message.\nMechanism to implement autocompletion features for text …\nEmpty struct and implementation of Autocomplete trait. …\nNo value.\nUsed when an autocompletion is triggered for the user’s …\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nStandalone autocompletion that can be implemented based …\nList of input suggestions to be displayed to the user upon …\nCalls <code>U::from(self)</code>.\nError while executing IO operations.\nType alias to define errors that might be thrown by the …\nContains the error value\nError while executing IO operations.\nPossible errors returned by <code>inquire</code> prompts.\nResult type where errors are of type InquireError\nThe given prompt configuration is not valid. A detailed …\nThe input device is not a TTY, which means that enabling …\nContains the success value\nThe user canceled the operation by pressing ESC.\nThe operation was interrupted by the user after they …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nType alias for formatters used in Confirm prompts.\nType alias for formatters used in <code>CustomType</code> prompts.\nString formatter used by default in Confirm prompts. …\nString formatter used by default in inputs that return a …\nType alias for formatters used in <code>MultiSelect</code> prompts.\nType alias for formatters used in Select prompts.\nType alias for formatters that receive a string slice as …\nRepresents a selection made by the user when prompted to …\nConverts from <code>&amp;ListOption&lt;T&gt;</code> to <code>ListOption&lt;&amp;T&gt;</code>.\nReturns the argument unchanged.\nIndex of the selected option relative to the original …\nCalls <code>U::from(self)</code>.\nConstructor for <code>ListOption</code>.\nValue of the selected option.\nType alias for parsers used in Confirm prompts.\nType alias for parsers used in Confirm prompts.\nBool formatter used  by default in Confirm prompts.\nType alias to represent the function used to retrieve an …\nType alias to represent the function used to Score and …\nType alias to represent the function used to retrieve text …\nAn ANSI color. See 256 colors - cheat sheet for more info.\nAttributes to apply to a text via the StyleSheet struct.\nIncreases the text intensity\nBlack color.\nRepresents a color to be used for text styling purposes.\nDark blue color.\nDark cyan color.\nDark green color.\nDark grey color.\nDark magenta color.\nDark red color.\nDark yellow color.\nRender configuration for error messages.\nGrey color.\nEmphasises the text.\nDefinition of index prefixes in option lists.\nLight blue color.\nLight cyan color.\nLight green color.\nLight magenta color.\nLight red color.\nLight yellow color.\nLists of options will not display any hints regarding the …\nRendering configuration that can be applied to a prompt.\nAn RGB color. See RGB color model for more info.\nA simple index (1-based) will be displayed before the …\nA simple index (1-based) will be displayed before the …\nStyle definitions that can be applied to the rendered …\nRepresents a content that when rendered must have the …\nWhite color.\nA simple index (1-based) will be displayed before the …\nGet a flags value with all known bits set.\nRender configuration of final prompt answers (submissions).\nPrefix added before answered prompts.\nAttributes applied to text.\nBackground color of text.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nRender configuration of the message printed in the place …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nContent to be rendered.\nA stylesheet with no colors and no attributes.\nRenderConfig where default colors and attributes are …\nRender configuration where default colors and attributes …\nDefault message used for validators that do not defined …\nRender configuration of default values.\nThe intersection of a source flags value with the …\nRenderConfig in which no colors or attributes are applied.\nRender configuration in which no colors or attributes are …\nGet a flags value with all bits unset.\nA stylesheet with no colors and no attributes.\nRender configuration for error messages.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nForeground color of text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nRender configuration of help messages.\nPrefix for the current highlighted option.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nCheck if the stylesheet contains no colors and no …\nYield a set of contained flags values.\nYield a set of contained named flags values.\nMessage style.\nCreates a style sheet with no colors and no attributes\nCreates a new <code>Styled</code> object with the specified content and …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nStyle sheet for options.\nDefinition of index prefixes in option lists.\nCharacter used to mask password text inputs when in mode …\nRender configuration of placeholders.\nPrefix style.\nStyle of the prompt message, applicable to all prompt …\nPrefix added before prompts.\nThe intersection of a source flags value with the …\nShorthand method for creating a Color from RGB components\nPrefix for the option listed at the bottom of the page, …\nPrefix for the option listed at the top of the page, when …\nSelected checkbox in multi-select options.\nStyle sheet for the option that is currently selected. If …\nSeparator style.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nStyle sheet to be applied to content when rendered.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nStyle sheet for text inputs.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnselected checkbox in multi-select options.\nSets the style sheet for answers.\nSets the answered prompt prefix and its style sheet.\nCopies the style sheet to a new one with the specified …\nSets the styled content to have the defined attributes.\nCopies the StyleSheet to a new one set with the defined …\nSets the styled content to have the defined foreground …\nSets the indicator for canceled prompts.\nUpdates the content while keeping the style sheet constant.\nSets the style sheet for default values.\nSets the render configuration for error messages.\nCopies the StyleSheet to a new one set with the defined …\nSets the styled content to have the defined foreground …\nSets the style sheet for help messages.\nSets the styled component for prefixes in highlighted …\nSets the message stylesheet.\nSets the style sheet for option values.\nSets the index prefix for option lists.\nSets the prefix.\nSets the prompt prefix and its style sheet.\nSets the styled component for prefixes in scroll-down …\nSets the styled component for prefixes in scroll-up …\nSets the styled component for selected checkboxes.\nSets the style sheet for currently selected option.\nSets the separator stylesheet.\nSets the style sheet to the styled struct.\nSets style for text inputs.\nSets the styled component for unselected checkboxes.\nblue value of RGB.\ngreen value of RGB.\nred value of RGB.\nCustom error message, used instead of the standard one.\nValidator used in <code>CustomType</code> prompts.\nNo custom message is defined, a standard one defined in …\nError message that is displayed to the users when their …\nBuilt-in validator that checks whether the answer length …\nCustom trait to call correct method to retrieve input …\nVariant that indicates that the input value is invalid …\nBuilt-in validator that checks whether the answer length …\nBuilt-in validator that checks whether the answer length …\nValidator used in <code>MultiSelect</code> prompts.\nValidator that receives a string slice as the input, such …\nVariant that indicates that the input value is valid …\nThe result type of validation operations when the …\nBuilt-in validator that checks whether the answer is not …\nCreate a new instance of this validator with the default …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nString inputs should count the number of graphemes, via …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of this validator with given error …\nCreate a new instance of this validator, requiring at most …\nCreate a new instance of this validator, requiring at …\nCreate a new instance of this validator, requiring exactly …\nConfirm the given input string is a valid value.\nConfirm the given input list is a valid value.\nConfirm the given input list is a valid value.\nDefine a custom error message returned by the validator. …\nDefine a custom error message returned by the validator. …\nDefine a custom error message returned by the validator. …")